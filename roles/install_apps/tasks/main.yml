---
- include_vars: "{{ansible_distribution}}.yml"
  when: ansible_os_family != "Suse"
- include_vars: "{{ansible_os_family}}.yml"
  when: ansible_os_family == "Suse"

- debug: msg="Hallo FTP Server der Familie {{ansible_distribution}}, Config {{ftp_config}} "

- name: vsftpd installieren
  package: name=vsftpd 

- name: locate installieren
  package: name='*locate'

- name: Datenbank erstellen
  command: updatedb
  args:
    creates: "{{locate_db}}"

- name: Configure firewall on RedHat systems
  firewalld:
    state: enabled
    port:  21/tcp
    immediate: yes
    permanent: yes
  when: ansible_os_family == "RedHat"

- name: vsftpd starten und in den Autostart setzen
  service: name=vsftpd state=started enabled=yes

- name: FTP Prozess überprüfen
  shell: ps auxww | grep ftp | grep -v grep 
  register: psausgabe
  changed_when: false
- debug: var=psausgabe.stdout

- name: local_umaks auf {{ ftp_umask }} setzen
  lineinfile:
    path: "{{ ftp_config }}"
    regexp:  '.*local_umask=.*'
    line: 'local_umask={{ftp_umask}}'
  notify:
     - restart vsftpd

- meta: flush_handlers

- name: FTP Prozess überprüfen
  shell: ps auxww | grep ftp | grep -v grep
  register: psausgabe
  changed_when: false

- debug: var=psausgabe.stdout

- name: Aktiviere Anonymus als User
  lineinfile:
    path: "{{ ftp_config }}"
    regexp: '^anonymous_enable=.*'
    line: 'anonymous_enable=YES'
  notify:
      - restart vsftpd
- name: Überprüfe den Parameter anonymous_enabled
  shell: |
   find /etc -name "*ftp*conf" | xargs grep -i anon.*en.*= | egrep -v '^$|#'
  register: userenableoutput
  changed_when: false

- debug: var=userenableoutput.stdout

- name: Grussmeldung hochladen
  #copy:
  template:
    src: message.j2
    dest: "{{ftp_anon_path}}/.message"
    #content: |
    # Hallo!
    # 
    # Willkommen auf dem unserem FTP-Server.
    # Halte Dich an die Nutzungsbedingungen!!!


